@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Base colors */
    --background: #ffffff;
    --foreground: #171717;

    /* Glass effect */
    --glass-bg: rgba(255, 255, 255, 0.8);
    --glass-border: rgba(255, 255, 255, 0.5);
    --glass-highlight: rgba(255, 255, 255, 0.9);
    --glass-shadow: rgba(31, 38, 135, 0.18);
    --glass-bg-fallback: rgba(255, 255, 255, 0.95);

    /* Shadcn UI variables */
    --radius: 0.75rem;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;

    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;

    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
  }

  .dark {
    /* Base colors */
    --background: #0a0a0a;
    --foreground: #ededed;

    /* Glass effect */
    --glass-bg: rgba(10, 10, 10, 0.75);
    --glass-border: rgba(40, 40, 40, 0.5);
    --glass-highlight: rgba(60, 60, 60, 0.4);
    --glass-shadow: rgba(0, 0, 0, 0.3);
    --glass-bg-fallback: rgba(10, 10, 10, 0.95);

    /* Shadcn UI variables */
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;

    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;

    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;

    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      /* Keeping the media query for auto dark mode, but we'll primarily use the .dark class */
      color-scheme: dark;
    }
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-feature-settings: "rlig" 1, "calt" 1;
}

@layer utilities {
  /* Enhanced glass effect with fallbacks */
  .glass-effect {
    background-color: var(--glass-bg-fallback);
    border: 1px solid var(--glass-border);
    box-shadow: 0 8px 32px 0 var(--glass-shadow);
    border-radius: var(--radius);

    /* Progressive enhancement for supported browsers */
    @supports ((-webkit-backdrop-filter: blur(4px)) or (backdrop-filter: blur(4px))) {
      background: var(--glass-bg);
      -webkit-backdrop-filter: blur(4px);
      backdrop-filter: blur(4px);
    }
  }

  .glass-effect-intense {
    background-color: var(--glass-bg-fallback);
    border: 1px solid var(--glass-border);
    box-shadow: 0 8px 32px 0 var(--glass-shadow);
    border-radius: var(--radius);

    /* Progressive enhancement for supported browsers */
    @supports ((-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px))) {
      background: var(--glass-bg);
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
    }
  }

  .glass-highlight {
    position: relative;
    overflow: hidden;
  }

  .glass-highlight::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent 0%,
      var(--glass-highlight) 50%,
      transparent 100%
    );
    opacity: 0.6;
    animation: shimmer 2.5s infinite;
  }

  /* Animations with reduced motion preferences */
  @media (prefers-reduced-motion: no-preference) {
    @keyframes shimmer {
      0% { left: -100%; }
      100% { left: 100%; }
    }

    @keyframes float {
      0% { transform: translateY(0px) translateX(0px); }
      50% { transform: translateY(-10px) translateX(5px); }
      100% { transform: translateY(0px) translateX(0px); }
    }

    @keyframes float-delay {
      0% { transform: translateY(0px) translateX(0px); }
      50% { transform: translateY(10px) translateX(-8px); }
      100% { transform: translateY(0px) translateX(0px); }
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .animate-float {
      animation: float 12s ease-in-out infinite;
    }

    .animate-float-delay {
      animation: float-delay 15s ease-in-out infinite;
    }

    .animate-fade-in {
      animation: fadeIn 0.8s ease-out forwards;
    }
  }

  /* Safe fallbacks for reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .animate-float,
    .animate-float-delay {
      animation: none;
      transition: none;
    }

    .animate-fade-in {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Hover effects */
  .hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .hover-lift:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px -5px var(--glass-shadow);
  }

  /* Glowing effects */
  .glow-effect {
    position: relative;
  }

  .glow-effect::after {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    background: radial-gradient(circle at center,
                              var(--primary)/10%,
                              transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: inherit;
    pointer-events: none;
  }

  .glow-effect:hover::after {
    opacity: 1;
  }

  /* Text gradient */
  .text-gradient {
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    background-image: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--accent)));
  }

  /* Blue/purple accent gradient for consistent design language */
  .accent-gradient {
    background-image: linear-gradient(to right, #4f46e5, #8b5cf6, #d946ef);
  }

  /* Ensure dark mode text contrast */
  .dark .text-muted-foreground {
    color: rgba(255, 255, 255, 0.65);
  }
}
